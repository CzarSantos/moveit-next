{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/nlw/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\nlw\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\n//solu√ß√£o para componetes conversarem entre si\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json'; //propriedades\n\n//criando contexto\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  //rest: todoas as outra propriedades\n  //setar level, desafios completed\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1]; //se na√µ existir usa 1\n\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1]; //barra progresso\n  //\n\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1]; //pontua√ß√£o \n\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2); //pedi permiss√£o ao user | efeito colateral\n\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []); //executa primeira fun√ß√£o uma unica vez\n  //salvar dados | cookies\n\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]); //executa quando houver altera√ß√£o de dados\n  //fun√ß√µes\n\n  function levelUp() {\n    setLevel(level + 1);\n  } //pega dados do array desafios\n\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge); //audio\n\n    new Audio('/notification.mp3').play(); //Notifica√ß√£o\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ! üëΩ üëª', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  } //pega experi√™ncia, soma e armazena\n\n\n  function completedChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount; //soma xp\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null); //zera desafio\n\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return (\n    /*#__PURE__*/\n    //Todos elementos dentro do provider passam a ter os dados dentro do contexto\n    _jsxDEV(ChallengesContext.Provider, {\n      value: {\n        level: level,\n        currentExperience: currentExperience,\n        challengesCompleted: challengesCompleted,\n        levelUp: levelUp,\n        startNewChallenge: startNewChallenge,\n        activeChallenge: activeChallenge,\n        resetChallenge: resetChallenge,\n        experienceToNextLevel: experienceToNextLevel,\n        completedChallenge: completedChallenge\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  );\n}\n/* verificado */\n\n_s(ChallengesProvider, \"rRgkk49nHdmxiilpCV+wZetkgvA=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/nlw/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completedChallenge","finalExperience"],"mappings":"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","sourcesContent":["//solu√ß√£o para componetes conversarem entre si\r\nimport { createContext, useState, ReactNode, useEffect } from 'react'\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\n\r\n\r\n//propriedades\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    experienceToNextLevel: number;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completedChallenge: () => void;\r\n\r\n\r\n}\r\n\r\n//criando contexto\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {//rest: todoas as outra propriedades\r\n    //setar level, desafios completed\r\n    const [level, setLevel] = useState(rest.level ?? 1);//se na√µ existir usa 1\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);//barra progresso\r\n\r\n\r\n    //\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    //pontua√ß√£o \r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n    //pedi permiss√£o ao user | efeito colateral\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])//executa primeira fun√ß√£o uma unica vez\r\n\r\n    //salvar dados | cookies\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n\r\n    }, [level, currentExperience, challengesCompleted]);//executa quando houver altera√ß√£o de dados\r\n\r\n    //fun√ß√µes\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n\r\n    }\r\n    //pega dados do array desafios\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        //audio\r\n        new Audio('/notification.mp3').play();\r\n\r\n        //Notifica√ß√£o\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio ! üëΩ üëª', {\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    //pega experi√™ncia, soma e armazena\r\n    function completedChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;//soma xp\r\n\r\n        if (finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);//zera desafio\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        //Todos elementos dentro do provider passam a ter os dados dentro do contexto\r\n\r\n        <ChallengesContext.Provider value={{\r\n            level,\r\n            currentExperience,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            experienceToNextLevel,\r\n            completedChallenge\r\n        }}\r\n        >\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n\r\n    );\r\n}\r\n\r\n/* verificado */"]},"metadata":{},"sourceType":"module"}