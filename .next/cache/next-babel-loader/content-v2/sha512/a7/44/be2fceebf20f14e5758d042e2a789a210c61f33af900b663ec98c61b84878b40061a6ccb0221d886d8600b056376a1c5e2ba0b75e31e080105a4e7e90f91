{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\nlw\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n//solução para componetes conversarem entre si\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1); //setar level, desafios completed\n\n  const {\n    0: currentExperience,\n    1: setCurrencie\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return (\n    /*#__PURE__*/\n    //Todos elementos dentro do provider passam a ter os dados dentro do contexto\n    _jsxDEV(ChallengesContext.Provider, {\n      value: {\n        level,\n        currentExperience,\n        challengesCompleted,\n        levelUp\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n}","map":{"version":3,"sources":["C:/nlw/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrencie","challengesCompleted","setChallengesCompleted","levelUp"],"mappings":";;AAAA;AACA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAQP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC,CADsE,CAEtE;;AACA,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAAoCP,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM;AAAA,OAACQ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDT,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASU,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAEH;;AAED;AAAA;AACI;AACA,YAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAF;AAASE,QAAAA,iBAAT;AAA4BE,QAAAA,mBAA5B;AAAiDE,QAAAA;AAAjD,OAAnC;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAOH","sourcesContent":["//solução para componetes conversarem entre si\r\nimport { createContext, useState, ReactNode } from 'react'\r\n\r\nexport const ChallengesContext = createContext({});\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\n\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    //setar level, desafios completed\r\n    const [currentExperience, setCurrencie] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n\r\n    }\r\n\r\n    return (\r\n        //Todos elementos dentro do provider passam a ter os dados dentro do contexto\r\n        <ChallengesContext.Provider value={{ level, currentExperience, challengesCompleted, levelUp }}>\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}