{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\nlw\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css'; //variaveis\n\nlet countdownTimeout;\nexport function Countdown() {\n  //funcionalidade minutos segundos\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60); //25 mn em sg\n  //armazena se contdown ativo ou não\n\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60); //pegar minutos arredondado\n\n  const seconds = time % 60; //resto da divisão\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); //se string não tiver 2 caracteres padStart preenche com 0 | passa posiçoes do vetor\n\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split(''); //se string não tiver 2 caracteres padStart preenche com 0\n  //Deccrescente\n\n  function startCountdown() {\n    setIsActive(true); //ativa\n  } //reset\n\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout); //cancela a execução do timeout\n\n    setIsActive(false); //desativa\n  } //efeito colateral de decrecimo\n\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        //retorna para countdownTimeout\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]); //executa quando valor de active mudar | e Time\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isActive ?\n    /*#__PURE__*/\n    //lógica botão se ativo \n    _jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n\n    /* senão */\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/nlw/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondsLeft","secondsRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB,C,CAEA;;AACA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAExB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,KAAK,EAAN,CAAhC,CAHwB,CAGiB;AAEzC;;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAGA,QAAMS,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB,CATwB,CASc;;AACtC,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB,CAVwB,CAUG;;AAE3B,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC,CAZwB,CAYqD;;AAC7E,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAApC,CAbwB,CAauD;AAE/E;;AACA,WAASG,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX,CADsB,CACJ;AACrB,GAlBuB,CAoBxB;;;AACA,WAASa,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACnB,gBAAD,CAAZ,CADsB,CACS;;AAC/BK,IAAAA,WAAW,CAAC,KAAD,CAAX,CAFsB,CAEH;AAEtB,GAzBuB,CA2BxB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBF,MAAAA,gBAAgB,GAAGoB,UAAU,CAAC,MAAM;AAAC;AACjCjB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT,CA5BwB,CAkCJ;;AAEpB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAeOZ,QAAQ;AAAA;AAAI;AAEX;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAG,GAAEL,MAAM,CAACuB,eAAgB,IAAGvB,MAAM,CAACwB,qBAAsB,EAA3F;AAA8F,MAAA,OAAO,EAAEL,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO;AAAA;;AAMN;AAEG;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEnB,MAAM,CAACuB,eAAxC;AAAyD,MAAA,OAAO,EAAEL,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\n//variaveis\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n\r\n    //funcionalidade minutos segundos\r\n    const [time, setTime] = useState(25 * 60)//25 mn em sg\r\n\r\n    //armazena se contdown ativo ou não\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n\r\n    const minutes = Math.floor(time / 60);//pegar minutos arredondado\r\n    const seconds = time % 60; //resto da divisão\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');//se string não tiver 2 caracteres padStart preenche com 0 | passa posiçoes do vetor\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');//se string não tiver 2 caracteres padStart preenche com 0\r\n\r\n    //Deccrescente\r\n    function startCountdown() {\r\n        setIsActive(true);//ativa\r\n    }\r\n\r\n    //reset\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);//cancela a execução do timeout\r\n        setIsActive(false);//desativa\r\n\r\n    }\r\n\r\n    //efeito colateral de decrecimo\r\n    useEffect(() => {\r\n        if (isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {//retorna para countdownTimeout\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }\r\n    }, [isActive, time])//executa quando valor de active mudar | e Time\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsLeft}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            {  isActive ? (//lógica botão se ativo \r\n\r\n                <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>\r\n\r\n                    Abandonar ciclo\r\n                </button>\r\n            ) : (/* senão */\r\n\r\n                    <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\r\n\r\n                        Iniciar um ciclo\r\n                    </button>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}