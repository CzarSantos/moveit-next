{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/nlw/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\nlw\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  //importa dados\n  var _useContext = useContext(CountdownContext),\n      minutes = _useContext.minutes,\n      seconds = _useContext.seconds,\n      hasFinished = _useContext.hasFinished,\n      isActive = _useContext.isActive,\n      startCountdown = _useContext.startCountdown,\n      resetCountdown = _useContext.resetCountdown; //formatação de dados\n\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1]; //se string não tiver 2 caracteres padStart preenche com 0 | passa posiçoes do vetor\n\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1]; //se string não tiver 2 caracteres padStart preenche com 0\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), hasFinished ?\n    /*#__PURE__*/\n    //se contador terminou\n    _jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ?\n      /*#__PURE__*/\n      //lógica botão se ativo \n      _jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this) :\n      /*#__PURE__*/\n\n      /* senão */\n      _jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n/* verificado */\n\n_s(Countdown, \"e0ge7w8fPvOpwrw/MkuczjpwSAI=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/nlw/moveit-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB;AADwB,oBASpBH,UAAU,CAACC,gBAAD,CATU;AAAA,MAGpBG,OAHoB,eAGpBA,OAHoB;AAAA,MAIpBC,OAJoB,eAIpBA,OAJoB;AAAA,MAKpBC,WALoB,eAKpBA,WALoB;AAAA,MAMpBC,QANoB,eAMpBA,QANoB;AAAA,MAOpBC,cAPoB,eAOpBA,cAPoB;AAAA,MAQpBC,cARoB,eAQpBA,cARoB,EAWxB;;;AAXwB,8BAYUC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAZV;AAAA;AAAA,MAYjBC,UAZiB;AAAA,MAYLC,WAZK,8BAYqD;;;AAZrD,+BAaYJ,MAAM,CAACL,OAAD,CAAN,CAAgBM,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAbZ;AAAA;AAAA,MAajBG,WAbiB;AAAA,MAaJC,YAbI,8BAauD;;;AAG/E,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMV,WAAW;AAAA;AAAI;AACb;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAQL;AAAA,gBACOX,QAAQ;AAAA;AAAI;AAEX;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,YAAKL,MAAM,CAACgB,eAAZ,cAA+BhB,MAAM,CAACiB,qBAAtC,CAFb;AAGI,QAAA,OAAO,EAAEV,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFO;AAAA;;AAUN;AAEG;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAFtB;AAGI,QAAA,OAAO,EAAEV,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbZ,qBArBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;AAED;;GAlEgBL,S;;KAAAA,S","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport { CountdownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\n\r\n\r\nexport function Countdown() {\r\n    //importa dados\r\n    const {\r\n        minutes,\r\n        seconds,\r\n        hasFinished,\r\n        isActive,\r\n        startCountdown,\r\n        resetCountdown\r\n    } = useContext(CountdownContext)\r\n\r\n    //formatação de dados\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');//se string não tiver 2 caracteres padStart preenche com 0 | passa posiçoes do vetor\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');//se string não tiver 2 caracteres padStart preenche com 0\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsLeft}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (//se contador terminou\r\n                <button\r\n                    disabled\r\n                    className={styles.countdownButton} >\r\n\r\n                    Ciclo encerrado\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        {  isActive ? (//lógica botão se ativo \r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                                onClick={resetCountdown}>\r\n\r\n                                Abandonar ciclo\r\n                            </button>\r\n\r\n                        ) : (/* senão */\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={styles.countdownButton}\r\n                                    onClick={startCountdown}>\r\n\r\n                                    Iniciar um ciclo\r\n                                </button>\r\n                            )}\r\n\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\n/* verificado */"]},"metadata":{},"sourceType":"module"}