{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\nlw\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\n//solução para componetes conversarem entre si\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\n//criando contexto\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1]; //setar level, desafios completed\n\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrencie = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1]; //\n\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1]; //pontuação \n\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  function levelUp() {\n    setLevel(level + 1);\n  } //pega dados do array desafios\n\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  return (\n    /*#__PURE__*/\n    //Todos elementos dentro do provider passam a ter os dados dentro do contexto\n    _jsxDEV(ChallengesContext.Provider, {\n      value: {\n        level: level,\n        currentExperience: currentExperience,\n        challengesCompleted: challengesCompleted,\n        levelUp: levelUp,\n        startNewChallenge: startNewChallenge,\n        activeChallenge: activeChallenge,\n        resetChallenge: resetChallenge,\n        experienceToNextLevel: experienceToNextLevel\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(ChallengesProvider, \"LS0+ceopArYWfTyfZ1jBYpmw2Ps=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/nlw/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrencie","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","resetChallenge"],"mappings":";;;;;AAAA;AACA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAyBA;AACA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC5CJ,QAAQ,CAAC,CAAD,CADoC;AAAA,MAC/DK,KAD+D;AAAA,MACxDC,QADwD,iBAEtE;;;AAFsE,mBAG5BN,QAAQ,CAAC,CAAD,CAHoB;AAAA,MAG/DO,iBAH+D;AAAA,MAG5CC,YAH4C;;AAAA,mBAIhBR,QAAQ,CAAC,CAAD,CAJQ;AAAA,MAI/DS,mBAJ+D;AAAA,MAI1CC,sBAJ0C,kBAOtE;;;AAPsE,mBAQxBV,QAAQ,CAAC,IAAD,CARgB;AAAA,MAQ/DW,eAR+D;AAAA,MAQ9CC,kBAR8C,kBAUtE;;;AACA,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;;AAEA,WAASW,OAAT,GAAmB;AACfV,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAEH,GAhBqE,CAiBtE;;;AACA,WAASY,iBAAT,GAA6B;AACzB,QAAMC,oBAAoB,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,KAAgBnB,UAAU,CAACoB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGrB,UAAU,CAACiB,oBAAD,CAA5B;AAEAN,IAAAA,kBAAkB,CAACU,SAAD,CAAlB;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED;AAAA;AACI;AAEA,YAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE;AAC/BP,QAAAA,KAAK,EAALA,KAD+B;AAE/BE,QAAAA,iBAAiB,EAAjBA,iBAF+B;AAG/BE,QAAAA,mBAAmB,EAAnBA,mBAH+B;AAI/BO,QAAAA,OAAO,EAAPA,OAJ+B;AAK/BC,QAAAA,iBAAiB,EAAjBA,iBAL+B;AAM/BN,QAAAA,eAAe,EAAfA,eAN+B;AAO/BY,QAAAA,cAAc,EAAdA,cAP+B;AAQ/BV,QAAAA,qBAAqB,EAArBA;AAR+B,OAAnC;AAAA,gBAWKT;AAXL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAkBH;;GA/CeD,kB;;KAAAA,kB","sourcesContent":["//solução para componetes conversarem entre si\r\nimport { createContext, useState, ReactNode } from 'react'\r\nimport challenges from '../../challenges.json';\r\n\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    experienceToNextLevel: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n\r\n\r\n}\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n//criando contexto\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    //setar level, desafios completed\r\n    const [currentExperience, setCurrencie] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n\r\n    //\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    //pontuação \r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n\r\n    }\r\n    //pega dados do array desafios\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null)\r\n    }\r\n\r\n    return (\r\n        //Todos elementos dentro do provider passam a ter os dados dentro do contexto\r\n\r\n        <ChallengesContext.Provider value={{\r\n            level,\r\n            currentExperience,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            experienceToNextLevel\r\n        }}\r\n        >\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}